{"version":3,"sources":["polymer/declaration-property-handlers.ts"],"names":[],"mappings":"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","file":"declaration-property-handlers.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as estree from 'estree';\n\nimport * as astValue from '../javascript/ast-value';\nimport {JavaScriptDocument} from '../javascript/javascript-document';\n\nimport {analyzeProperties} from './analyze-properties';\nimport {ScannedPolymerElement} from './polymer-element';\nimport {Severity} from '../warning/warning';\n\nexport type PropertyHandlers = {\n  [key: string]: (node: estree.Node) => void\n};\n\n/**\n * Returns an object containing functions that will annotate `declaration` with\n * the polymer-specific meaning of the value nodes for the named properties.\n */\nexport function declarationPropertyHandlers(\n    declaration: ScannedPolymerElement,\n    document: JavaScriptDocument): PropertyHandlers {\n  return {\n    is(node: estree.Node) {\n      if (node.type === 'Literal') {\n        declaration.tagName = '' + node.value;\n      }\n    },\n    properties(node: estree.Node) {\n      for (const prop of analyzeProperties(node, document)) {\n        declaration.addProperty(prop);\n      }\n    },\n    behaviors(node: estree.Node) {\n      if (node.type !== 'ArrayExpression') {\n        return;\n      }\n      for (const element of node.elements) {\n        let behaviorName = astValue.getIdentifierName(element);\n        if (behaviorName === undefined) {\n          behaviorName = astValue.CANT_CONVERT;\n        }\n        declaration.behaviorAssignments.push({\n          name: behaviorName,\n          sourceRange: document.sourceRangeForNode(element)!,\n        });\n      }\n    },\n    observers(node: estree.Node) {\n      if (node.type !== 'ArrayExpression') {\n        return;\n      }\n      for (let element of node.elements) {\n        let v = astValue.expressionToValue(element);\n        if (v === undefined) {\n          v = astValue.CANT_CONVERT;\n        }\n        declaration.observers.push({javascriptNode: element, expression: v});\n      }\n    },\n    listeners(node: estree.Node) {\n\n      if (node.type !== 'ObjectExpression') {\n        declaration.warnings.push({\n          code: 'invalid-listeners-declaration',\n          message: '`listeners` property should be an object expression',\n          severity: Severity.ERROR,\n          sourceRange: document.sourceRangeForNode(node)!\n        });\n        return;\n      }\n\n      for (let p of node.properties) {\n        const evtName = p.key.type === 'Literal' && p.key.value ||\n            p.key.type === 'Identifier' && p.key.name;\n        const handler = p.value.type !== 'Literal' || p.value.value;\n\n        if (typeof evtName !== 'string' || typeof handler !== 'string') {\n            // TODO (maklesoft): Notifiy the user somehow that a listener entry was not extracted\n            // because the event or handler namecould not be statically analyzed. E.g. add a low-severity\n            // warning once opting out of rules is supported.\n            continue;\n        }\n\n        declaration.listeners.push({event: evtName, handler: handler});\n      }\n    }\n  };\n}\n"]}