{"version":3,"sources":["model/source-range.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;;AAkCH;;;;;;;;;;GAUG;AACH,4BACI,WAAyB,EACzB,cAAoC;IACtC,EAAE,CAAC,CAAC,CAAC,cAAc,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IACD,MAAM,CAAC;QACL,IAAI,EAAE,cAAc,CAAC,QAAQ,IAAI,WAAW,CAAC,IAAI;QACjD,KAAK,EAAE,eAAe,CAAC,WAAW,CAAC,KAAK,EAAE,cAAc,CAAC;QACzD,GAAG,EAAE,eAAe,CAAC,WAAW,CAAC,GAAG,EAAE,cAAc,CAAC;KACtD,CAAC;AACJ,CAAC;AAXD,gDAWC;AAED,yBACI,QAAkB,EAAE,cAA8B;IACpD,MAAM,CAAC;QACL,IAAI,EAAE,QAAQ,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI;QACzC,MAAM,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,GAAG,GAAG,CAAC,CAAC;KACzE,CAAC;AACJ,CAAC;AAND,0CAMC","file":"source-range.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Describes a range of text within a source file.\n *\n * NOTE: `line` and `column` Position properties are indexed from zero. Consider\n * displaying them to users as one-indexed numbers to match text editor\n * conventions.\n */\nexport interface SourceRange {\n  /* The resolved path to the file. */\n  file: string;\n  start: Position;\n  end: Position;\n}\n\nexport interface Position {\n  /** The line number, starting from zero. */\n  line: number;\n  /** The column offset within the line, starting from zero. */\n  column: number;\n}\n\nexport interface LocationOffset {\n  /** Zero based line index. */\n  line: number;\n  /** Zero based column index. */\n  col: number;\n  /**\n   * The url of the source file.\n   */\n  filename?: string;\n}\n\n/**\n * Corrects source ranges based on an offset.\n *\n * Source ranges for inline documents need to be corrected relative to their\n * positions in their containing documents.\n *\n * For example, if a <script> tag appears in the fifth line of its containing\n * document, we need to move all the source ranges inside that script tag down\n * by 5 lines. We also need to correct the column offsets, but only for the\n * first line of the <script> contents.\n */\nexport function correctSourceRange(\n    sourceRange?: SourceRange,\n    locationOffset?: LocationOffset|null): SourceRange|undefined {\n  if (!locationOffset || !sourceRange) {\n    return sourceRange;\n  }\n  return {\n    file: locationOffset.filename || sourceRange.file,\n    start: correctPosition(sourceRange.start, locationOffset),\n    end: correctPosition(sourceRange.end, locationOffset)\n  };\n}\n\nexport function correctPosition(\n    position: Position, locationOffset: LocationOffset): Position {\n  return {\n    line: position.line + locationOffset.line,\n    column: position.column + (position.line === 0 ? locationOffset.col : 0)\n  };\n}\n"]}