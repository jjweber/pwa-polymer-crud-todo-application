{"version":3,"sources":["test/test-utils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;;;;;;;;;;AAEH,+BAAuC,SAAQ,KAAK;IAElD,YAAY,OAAe,EAAE,aAAkB;QAC7C,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACrC,CAAC;CACF;AAND,8DAMC;AAED,uBAAoC,OAAqB;;QACvD,IAAI,KAAU,CAAC;QACf,IAAI,CAAC;YACH,KAAK,GAAG,MAAM,OAAO,CAAC;QACxB,CAAE;QAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,CAAC,CAAC;QACX,CAAC;QACD,MAAM,IAAI,yBAAyB,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;IAC1E,CAAC;CAAA;AARD,sCAQC","file":"test-utils.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nexport class UnexpectedResolutionError extends Error {\n  resolvedValue: any;\n  constructor(message: string, resolvedValue: any) {\n    super(message);\n    this.resolvedValue = resolvedValue;\n  }\n}\n\nexport async function invertPromise(promise: Promise<any>): Promise<any> {\n  let value: any;\n  try {\n    value = await promise;\n  } catch (e) {\n    return e;\n  }\n  throw new UnexpectedResolutionError('Inverted Promise resolved', value);\n}\n"]}