{"version":3,"sources":["polymer/docs.ts"],"names":[],"mappings":"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","file":"docs.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as jsdoc from '../javascript/jsdoc';\nimport {ScannedEvent, ScannedFeature, ScannedProperty} from '../model/model';\n\nimport {ScannedBehavior} from './behavior';\nimport {ScannedPolymerCoreFeature} from './polymer-core-feature';\nimport {ScannedFunction, ScannedPolymerElement, ScannedPolymerProperty} from './polymer-element';\n\n\n\n// TODO(rictic): destroy this file with great abadon. It's the oldest and\n//     hardest to understand in the repo at this point I think.\n\n// This is to prevent warnings that annotateProperty is unused.\n// It is unused, but we want to extract the good bits from this file\n// before we delete the whole thing.\nif (Math.random() > 1000) {\n  annotateProperty.name;\n}\n\n\n/** Properties on element prototypes that are purely configuration. */\nconst ELEMENT_CONFIGURATION = [\n  'attached',\n  'attributeChanged',\n  'beforeRegister',\n  'configure',\n  'constructor',\n  'created',\n  'detached',\n  'enableCustomStyleProperties',\n  'extends',\n  'hostAttributes',\n  'is',\n  'listeners',\n  'mixins',\n  'properties',\n  'ready',\n  'registered'\n];\n\n/** Tags understood by the annotation process, to be removed during `clean`. */\nconst HANDLED_TAGS = [\n  'param',\n  'return',\n  'type',\n];\n\n/**\n * Annotates Hydrolysis scanned features, processing any descriptions as\n * JSDoc.\n *\n * You probably want to use a more specialized version of this, such as\n * `annotateElement`.\n *\n * Processed JSDoc values will be made available via the `jsdoc` property on a\n * scanned feature.\n */\nexport function\nannotate<Scanned extends{jsdoc?: jsdoc.Annotation, description?: string}>(\n    feature: Scanned): Scanned {\n  if (!feature || feature.jsdoc) {\n    return feature;\n  }\n\n  if (typeof feature.description === 'string') {\n    feature.jsdoc = jsdoc.parseJsdoc(feature.description);\n    // We want to present the normalized form of a feature.\n    feature.description = feature.jsdoc.description;\n  }\n\n  return feature;\n}\n\n/**\n * Annotates @event, @hero, & @demo tags\n */\nexport function annotateElementHeader(scannedElement: ScannedPolymerElement) {\n  scannedElement.demos = [];\n  if (scannedElement.jsdoc && scannedElement.jsdoc.tags) {\n    scannedElement.jsdoc.tags.forEach(function(tag) {\n      switch (tag.tag) {\n        case 'demo':\n          scannedElement.demos.push({\n            desc: tag.description || 'demo',\n            path: tag.name || 'demo/index.html'\n          });\n          break;\n      }\n    });\n  }\n}\n\nexport function annotateBehavior(scannedBehavior: ScannedBehavior):\n    ScannedBehavior {\n  annotate(scannedBehavior);\n  annotateElementHeader(scannedBehavior);\n\n  return scannedBehavior;\n}\n\n/**\n * Annotates event documentation\n */\nexport function annotateEvent(annotation: jsdoc.Annotation): ScannedEvent {\n  const eventTag = jsdoc.getTag(annotation, 'event');\n  let name: string;\n  if (eventTag && eventTag.description) {\n    name = (eventTag.description || '').match(/^\\S*/)![0];\n  } else {\n    name = 'N/A';\n  }\n  const scannedEvent: ScannedEvent = {\n    name: name,\n    description: (eventTag && eventTag.description) || annotation.description,\n    jsdoc: annotation,\n    sourceRange: undefined,\n    astNode: null,\n    warnings: [],\n  };\n\n  const tags = (annotation && annotation.tags || []);\n  // process @params\n  scannedEvent.params =\n      tags.filter((tag) => tag.tag === 'param').map(function(param) {\n        return {\n          type: param.type || 'N/A',\n          desc: param.description || '',\n          name: param.name || 'N/A'\n        };\n      });\n  // process @params\n  return scannedEvent;\n}\n\n/**\n * Annotates documentation found about a scanned polymer property.\n *\n * @param feature\n * @param ignoreConfiguration If true, `configuration` is not set.\n * @return The descriptior that was given.\n */\nfunction annotateProperty(\n    feature: ScannedPolymerProperty,\n    ignoreConfiguration: boolean): ScannedPolymerProperty {\n  annotate(feature);\n  if (feature.name[0] === '_' || jsdoc.hasTag(feature.jsdoc, 'private')) {\n    feature.private = true;\n  }\n\n  if (!ignoreConfiguration &&\n      ELEMENT_CONFIGURATION.indexOf(feature.name) !== -1) {\n    feature.private = true;\n    feature.configuration = true;\n  }\n\n  // @type JSDoc wins\n  feature.type = jsdoc.getTag(feature.jsdoc, 'type', 'type') || feature.type;\n\n  if (feature.type && feature.type.match(/^function/i)) {\n    _annotateFunctionProperty(<ScannedFunction><any>feature);\n  }\n\n  // @default JSDoc wins\n  const defaultTag = jsdoc.getTag(feature.jsdoc, 'default');\n  if (defaultTag !== null) {\n    const newDefault = (defaultTag.name || '') + (defaultTag.description || '');\n    if (newDefault !== '') {\n      feature.default = newDefault;\n    }\n  }\n\n  return feature;\n}\n\nfunction _annotateFunctionProperty(scannedFunction: ScannedFunction) {\n  scannedFunction.function = true;\n\n  const returnTag = jsdoc.getTag(scannedFunction.jsdoc, 'return');\n  if (returnTag) {\n    scannedFunction.return = {\n      type: returnTag.type,\n      desc: returnTag.description || '',\n    };\n  }\n\n  const paramsByName = {};\n  (scannedFunction.params || []).forEach((param) => {\n    paramsByName[param.name] = param;\n  });\n  (scannedFunction.jsdoc && scannedFunction.jsdoc.tags || []).forEach((tag) => {\n    if (tag.tag !== 'param' || tag.name == null)\n      return;\n    const param = paramsByName[tag.name];\n    if (!param) {\n      return;\n    }\n\n    param.type = tag.type || param.type;\n    param.desc = tag.description;\n  });\n}\n\n/**\n * Converts raw features into an abstract `Polymer.Base` element.\n *\n * Note that docs on this element _are not processed_. You must call\n * `annotateElement` on it yourself if you wish that.\n */\nexport function featureElement(features: ScannedPolymerCoreFeature[]):\n    ScannedPolymerElement {\n  const properties =\n      features.reduce<ScannedPolymerProperty[]>((result, feature) => {\n        return result.concat(feature.properties);\n      }, []);\n\n  return new ScannedPolymerElement({\n    className: 'Polymer.Base',\n    abstract: true,\n    properties: properties,\n    description: '`Polymer.Base` acts as a base prototype for all Polymer ' +\n        'elements. It is composed via various calls to ' +\n        '`Polymer.Base._addFeature()`.\\n' +\n        '\\n' +\n        'The properties reflected here are the combined view of all ' +\n        'features found in this library. There may be more properties ' +\n        'added via other libraries, as well.',\n    sourceRange: undefined\n  });\n}\n\n/**\n * Cleans redundant properties from a feature, assuming that you have already\n * called `annotate`.\n */\nexport function clean(scannedFeature: ScannedFeature) {\n  if (!scannedFeature.jsdoc) {\n    return;\n  }\n  // The doctext was written to `scannedFeature.description`\n  delete scannedFeature.jsdoc.description;\n\n  const cleanTags: jsdoc.Tag[] = [];\n  (scannedFeature.jsdoc.tags || []).forEach(function(tag) {\n    // Drop any tags we've consumed.\n    if (HANDLED_TAGS.indexOf(tag.tag) !== -1)\n      return;\n    cleanTags.push(tag);\n  });\n\n  if (cleanTags.length === 0) {\n    // No tags? no docs left!\n    delete scannedFeature.jsdoc;\n  } else {\n    scannedFeature.jsdoc.tags = cleanTags;\n  }\n}\n\n/**\n * Cleans redundant properties from an element, assuming that you have already\n * called `annotateElement`.\n */\nexport function cleanElement(element: ScannedPolymerElement) {\n  clean(element);\n  element.properties.forEach(cleanProperty);\n}\n\n/**\n * Cleans redundant properties from a property, assuming that you have already\n * called `annotateProperty`.\n */\nfunction cleanProperty(property: ScannedProperty) {\n  clean(property);\n}\n"]}