{"version":3,"sources":["test/vanilla-custom-elements/element-scanner_test.ts"],"names":[],"mappings":"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","file":"element-scanner_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\nimport * as chai from 'chai';\nimport {assert} from 'chai';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nimport {Visitor} from '../../javascript/estree-visitor';\nimport {JavaScriptDocument} from '../../javascript/javascript-document';\nimport {JavaScriptParser} from '../../javascript/javascript-parser';\nimport {ScannedElement} from '../../model/model';\nimport {ElementScanner} from '../../vanilla-custom-elements/element-scanner';\n\nchai.use(require('chai-subset'));\n\nsuite('VanillaElementScanner', () => {\n\n  const elements = new Map<string|undefined, ScannedElement>();\n  let document: JavaScriptDocument;\n  let elementsList: ScannedElement[];\n\n  suiteSetup(async() => {\n    const parser = new JavaScriptParser({sourceType: 'script'});\n    const file = fs.readFileSync(\n        path.resolve(__dirname, '../static/vanilla-elements.js'), 'utf8');\n    document = parser.parse(file, '/static/vanilla-elements.js');\n    const scanner = new ElementScanner();\n    const visit = (visitor: Visitor) =>\n        Promise.resolve(document.visit([visitor]));\n\n    const features = await scanner.scan(document, visit);\n    elementsList =\n        <ScannedElement[]>features.filter((e) => e instanceof ScannedElement);\n    for (const element of elementsList) {\n      elements.set(element.tagName, element);\n    }\n  });\n\n  test('Finds elements', () => {\n    assert.deepEqual(elementsList.map(e => e.tagName).sort(), [\n      'anonymous-class',\n      'class-declaration',\n      'class-expression',\n      'vanilla-with-observed-attributes',\n      'register-before-declaration',\n      'register-before-expression'\n    ].sort());\n    assert.deepEqual(elementsList.map(e => e.className).sort(), [\n      undefined,\n      'ClassDeclaration',\n      'ClassExpression',\n      'WithObservedAttributes',\n      'RegisterBeforeDeclaration',\n      'RegisterBeforeExpression'\n    ].sort());\n    assert.deepEqual(elementsList.map(e => e.superClass).sort(), [\n      'HTMLElement',\n      'HTMLElement',\n      'HTMLElement',\n      'HTMLElement',\n      'HTMLElement',\n      'HTMLElement',\n    ].sort());\n  });\n\n  test('Extracts attributes from observedAttributes', () => {\n    const element = elements.get('vanilla-with-observed-attributes')!;\n    assert.containSubset(element.attributes, [\n      {\n        description: 'When given the element is totally inactive',\n        name: 'disabled',\n        type: 'boolean',\n        sourceRange: {\n          file: '/static/vanilla-elements.js',\n          start: {column: 6, line: 25},\n          end: {column: 16, line: 25}\n        }\n      },\n      {\n        description: 'When given the element is expanded',\n        name: 'open',\n        type: 'boolean',\n        sourceRange: {\n          file: '/static/vanilla-elements.js',\n          start: {column: 6, line: 27},\n          end: {column: 12, line: 27}\n        }\n      },\n      {\n        description: '',\n        name: 'foo',\n        sourceRange: {\n          file: '/static/vanilla-elements.js',\n          start: {column: 14, line: 27},\n          end: {column: 19, line: 27}\n        },\n      },\n      {\n        description: '',\n        name: 'bar',\n        sourceRange: {\n          file: '/static/vanilla-elements.js',\n          start: {column: 21, line: 27},\n          end: {column: 26, line: 27}\n        },\n      }\n    ]);\n  });\n\n  test('Extracts description from jsdoc', () => {\n    const element = elements.get('vanilla-with-observed-attributes');\n    assert.equal(\n        element!.description,\n        'This is a description of WithObservedAttributes.');\n  });\n});\n"]}