{"version":3,"sources":["utils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;;AAEH,kBAAyB,GAAW,EAAE,IAAY;IAChD,IAAI,QAAQ,GAAG,CAAC,CAAC;IACjB,OAAO,GAAG,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC;QAC9B,QAAQ,EAAE,CAAC;IACb,CAAC;IACD,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AACjC,CAAC;AAND,4BAMC;AAED;IAIE;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;YACzC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,MAAM,CAAC,CAAC,KAAU,EAAE,KAAQ;YAC1B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACtB,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;CACF;AApBD,4BAoBC","file":"utils.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nexport function trimLeft(str: string, char: string): string {\n  let leftEdge = 0;\n  while (str[leftEdge] === char) {\n    leftEdge++;\n  }\n  return str.substring(leftEdge);\n}\n\nexport class Deferred<T> {\n  promise: Promise<T>;\n  resolve: (result: T) => void;\n  reject: (error: Error) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n\n  toNodeCallback() {\n    return (error: any, value: T) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n    };\n  }\n}\n"]}