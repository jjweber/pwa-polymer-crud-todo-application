/**
 * @license
 * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
"use strict";
const parse5_1 = require("parse5");
const html_document_1 = require("./html-document");
class HtmlParser {
    /**
    * Parse html into ASTs.
    *
    * @param {string} htmlString an HTML document.
    * @param {string} href is the path of the document.
    */
    parse(contents, url, inlineInfo) {
        let ast = parse5_1.parse(contents, { locationInfo: true });
        const isInline = !!inlineInfo;
        inlineInfo = inlineInfo || {};
        return new html_document_1.ParsedHtmlDocument({
            url,
            contents,
            ast,
            locationOffset: inlineInfo.locationOffset,
            astNode: inlineInfo.astNode, isInline,
        });
    }
}
exports.HtmlParser = HtmlParser;

//# sourceMappingURL=html-parser.js.map
