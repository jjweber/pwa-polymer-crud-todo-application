{"version":3,"sources":["generate-elements.ts"],"names":[],"mappings":"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","file":"generate-elements.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as fs from 'fs';\nimport * as jsonschema from 'jsonschema';\nimport * as pathLib from 'path';\n\nimport {Attribute, Element, Elements, Property, SourceRange} from './elements-format';\nimport {Attribute as ResolvedAttribute, Element as ResolvedElement, Property as ResolvedProperty, SourceRange as ResolvedSourceRange} from './model/model';\n\n\nexport function generateElementMetadata(\n    elements: ResolvedElement[], packagePath: string): Elements|undefined {\n  return {\n    schema_version: '1.0.0',\n    elements: elements.map(e => serializeElement(e, packagePath))\n                  .filter(e => !!e) as Element[]\n  };\n}\n\nconst validator = new jsonschema.Validator();\nconst schema = JSON.parse(\n    fs.readFileSync(pathLib.join(__dirname, 'analysis.schema.json'), 'utf-8'));\n\nexport class ValidationError extends Error {\n  errors: jsonschema.ValidationError[];\n  constructor(result: jsonschema.ValidatorResult) {\n    const message = `Unable to validate serialized Polymer analysis. ` +\n        `Got ${result.errors.length} errors: ` +\n        `${result.errors.map(err => '    ' + (err.message || err)).join('\\n')}`;\n    super(message);\n    this.errors = result.errors;\n  }\n}\n\n/**\n * Throws if the given object isn't a valid AnalyzedPackage according to\n * the JSON schema.\n */\nexport function validateElements(analyzedPackage: Elements|null|undefined) {\n  const result = validator.validate(analyzedPackage, schema);\n  if (result.throwError) {\n    throw result.throwError;\n  }\n  if (result.errors.length > 0) {\n    throw new ValidationError(result);\n  }\n  if (!/^1\\.\\d+\\.\\d+$/.test(analyzedPackage!.schema_version)) {\n    throw new Error(\n        `Invalid schema_version in AnalyzedPackage. ` +\n        `Expected 1.x.x, got ${analyzedPackage!.schema_version}`);\n  }\n}\n\n\nfunction serializeElement(\n    resolvedElement: ResolvedElement, packagePath: string): Element|null {\n  if (!resolvedElement.tagName) {\n    return null;\n  }\n\n  const path = resolvedElement.sourceRange.file;\n  const packageRelativePath =\n      pathLib.relative(packagePath, resolvedElement.sourceRange.file);\n\n  const attributes = resolvedElement.attributes.map(\n      a => serializeAttribute(resolvedElement, path, a));\n  const properties =\n      resolvedElement.properties\n          .filter(\n              p => !p.private &&\n                  // Blacklist functions until we figure out what to do.\n                  p.type !== 'Function')\n          .map(p => serializeProperty(resolvedElement, path, p));\n  const events = resolvedElement.events.map(\n      e => ({\n        name: e.name,\n        description: e.description || '',\n        type: 'CustomEvent',\n        metadata: resolvedElement.emitEventMetadata(e)\n      }));\n\n  return {\n    tagname: resolvedElement.tagName,\n    description: resolvedElement.description || '',\n    superclass: 'HTMLElement',\n    path: packageRelativePath,\n    attributes: attributes,\n    properties: properties,\n    styling: {\n      cssVariables: [],\n      selectors: [],\n    },\n    demos: (resolvedElement.demos || []).map(d => d.path),\n    slots: resolvedElement.slots.map(s => {\n      return {description: '', name: s.name, range: s.range};\n    }),\n    events: events,\n    metadata: resolvedElement.emitMetadata(),\n    sourceRange: resolveSourceRangePath(path, resolvedElement.sourceRange),\n  };\n}\n\nfunction serializeProperty(\n    resolvedElement: ResolvedElement,\n    elementPath: string,\n    resolvedProperty: ResolvedProperty): Property {\n  const property: Property = {\n    name: resolvedProperty.name,\n    type: resolvedProperty.type || '?',\n    description: resolvedProperty.description || '',\n    sourceRange:\n        resolveSourceRangePath(elementPath, resolvedProperty.sourceRange)\n  };\n  if (resolvedProperty.default) {\n    property.defaultValue = resolvedProperty.default;\n  }\n  property.metadata = resolvedElement.emitPropertyMetadata(resolvedProperty);\n  return property;\n}\n\nfunction serializeAttribute(\n    resolvedElement: ResolvedElement,\n    elementPath: string,\n    resolvedAttribute: ResolvedAttribute): Attribute {\n  const attribute: Attribute = {\n    name: resolvedAttribute.name,\n    description: resolvedAttribute.description || '',\n    sourceRange:\n        resolveSourceRangePath(elementPath, resolvedAttribute.sourceRange)\n  };\n  if (resolvedAttribute.type) {\n    attribute.type = resolvedAttribute.type;\n  }\n  attribute.metadata = resolvedElement.emitAttributeMetadata(resolvedAttribute);\n  return attribute;\n}\n\nfunction resolveSourceRangePath(\n    elementPath: string,\n    sourceRange?: ResolvedSourceRange): (SourceRange|undefined) {\n  if (!sourceRange) {\n    return;\n  }\n  if (!sourceRange.file) {\n    return sourceRange;\n  }\n  if (elementPath === sourceRange.file) {\n    return {start: sourceRange.start, end: sourceRange.end};\n  }\n  // The source location's path is relative to file resolver's base, so first\n  // we need to make it relative to the element.\n  const filePath =\n      pathLib.relative(pathLib.dirname(elementPath), sourceRange.file);\n  return {file: filePath, start: sourceRange.start, end: sourceRange.end};\n}\n"]}