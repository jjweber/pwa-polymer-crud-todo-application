{"version":3,"sources":["model/model.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;;;;;AAEH;;;;;;;;;;;;;;;;;;GAkBG;AAEH,gCAA2B;AAC3B,+BAA0B;AAC1B,yDAA8E;AAAtE,+CAAA,gBAAgB,CAAA;AAAE,sDAAA,uBAAuB,CAAA;AAGjD,8BAAyB;AACzB,uCAAkC;AAGlC,kCAA6B;AAC7B,oCAA+B","file":"model.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * This directory exposes our underlying models. The naming scheme is based on\n * the stage of the processing pipeline that an object is produced by.\n *\n * The pipeline looks like:\n *   load: reads in bytes from filesystem/network\n *   parse: convert bytes to abstract syntax trees\n *   scan: extract entirely local features from a single ast\n *   resolve: integrate cross-file information to produce the final result\n *\n * Importantly, we can cache everything before `resolve` at the file level,\n * making incremental analysis efficient.\n *\n * Because the output of the resolve phase is the API that will get the most\n * use, its results have clear, unprefixed names. So a resolved document is just\n * a Document, a resolved element is an Element.\n *\n * Earlier stages have the longer names, like ParsedDocument and ScannedElement.\n */\n\nexport * from './document';\nexport * from './element';\nexport {ElementReference, ScannedElementReference} from './element-reference';\nexport * from './event';\nexport * from './feature';\nexport * from './import';\nexport * from './inline-document';\nexport * from './literal';\nexport * from './property';\nexport * from './resolvable';\nexport * from './source-range';\n"]}